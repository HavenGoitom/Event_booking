setting up the database schema
first type npm install prisma inside the terminal
this will create a folder with the schema.prisma file inside 
that is where the models for the database will be there
and believe me if you want a sane mind you need to remove the output part from the generator part of schema.prisma 
to make sure the generator is actually ES6 compatible
then in your .env file set the DATA_BASE_URL to some data base you created
first install postgres and create a database 
Then in your .env file make sure the DATA_BASE_URL is structured in the following way
postgres://username:password@localhost:5432/yourDataBaseName and make sure to insert the password you used for postgres set up

// then first write npm init -y in the terminal to create node_modules and package.json to keep versions of dependencies you install
write npm install to get everything from package.json
// npm init -y 
// npm install prisma
// npm install @prisma/client
// npx prisma init -> initializes prisma/ folder with schema.prisma


upon the completion of the payment there may be 2 things
successful payment -> transaction id and status sent to notify url
failed payment -> null transaction id
// this means only a single way of payment is allowed here maybe card or sthg
// even tho arif pay supports card , mobile and bank transfers it will only allow card payment
there are 2 types of payment flows
One way -> ie the arif pay server will do the confirmation req via pop up
Two way -> even tho arif pay is the one doing the transaction another 3rd party like bank
will do the confirmation requesst

So abt check out session completion once it is done they will send a payment
link to the notify u


So what is really going on under the hood


Nonce what is really the point -> it is used for security and is short lived
To prevent the replay attack
Nonce is used by arif pay server so that once an api call is made then u wont replay an old api call
So that hackers wont see ur info and like resend the info bc the nonce will be spent - it will secure the exact api call
So first your backend will generate 


// so when u create a session then the arif pay server will send a post req
// this post request in it will have a the session id ,
// so sessionId - is created by arif pays server
// but transactionId - is created by ur backend
// sessionId - manages payment on arif pay side
// transactioId - is used to prevent idempotency 
// used for e
// transaction id is it sent when u do a connection to arif pay server?
// and will arif pay server send it back with a confirmation
// so u do send the transactionId in the payload
// and arif pay will send u the web hook including that transaction id that u generated  to make u know abt it
 